
package org.schorn.ella.ws.api;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.OPTIONS;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.HttpHeaders;
import javax.ws.rs.core.Response;

import org.schorn.ella.ws.api.APIUtil.ContentType;
import org.schorn.ella.ws.api.APIUtil.ActionCategory;
import org.schorn.ella.ws.api.APIUtil.EntityType;
import org.schorn.ella.ws.api.APIUtil.Method;
import org.schorn.ella.ws.handler.ServiceHandler;

@Path("/meta")
@Consumes()
@Produces({"text/html"})

/**
 * 
 * @author schorn
 *
 */
@Deprecated
public class MetaGetHtml {
	@Context
    private HttpHeaders headers;

	/*
	 * This will return the object types for a context
	 */
	@GET
	@Path("/{context}")
	public Response getWithContext(
			@PathParam("context") String context
			) {
		APIUtil.Parameters parameters = APIUtil.Parameters.create(ActionCategory.META, Method.GET, ContentType.HTML);
		parameters.set(APIUtil.Param.CONTEXT, context);
		return ServiceHandler.route(headers, parameters).build();
	}
	
	
	/*
	 * This will return the member types for a object type
	 */
	@GET
	@Path("/{context}/{object_type}")
	public Response getWithContextAndObjectType(
			@PathParam("context") String context,
			@PathParam("object_type") String object_type
			) {
		APIUtil.Parameters parameters = APIUtil.Parameters.create(ActionCategory.META, Method.GET, ContentType.HTML);
		parameters.set(APIUtil.Param.CONTEXT, context);
		parameters.set(EntityType.OBJECT_TYPE,object_type);
		return ServiceHandler.route(headers, parameters).build();
	}	
	
	/*
	 * This will return the attribute details of a member type
	 */
	@GET
	@Path("/{context}/{object_type}/{member_type}")
	public Response getWithContextAndObjectTypeAndMemberType(
			@PathParam("context") String context,
			@PathParam("object_type") String object_type,
			@PathParam("member_type") String member_type
			) {
		APIUtil.Parameters parameters = APIUtil.Parameters.create(ActionCategory.META, Method.GET, ContentType.HTML);
		parameters.set(APIUtil.Param.CONTEXT, context);
		parameters.set(EntityType.OBJECT_TYPE, object_type);
		parameters.set(EntityType.MEMBER_TYPE, member_type);
		return ServiceHandler.route(headers, parameters).build();
	}		

	
	/*
	 * CORS
	 */
	@OPTIONS
	@Path("/{context}")
	public Response optionsWithContext(
			@PathParam("context") String context
			) {
		APIUtil.Parameters parameters = APIUtil.Parameters.create(ActionCategory.META, Method.OPTIONS, ContentType.HTML);
		parameters.set(APIUtil.Param.CONTEXT, context);
		return ServiceHandler.route(headers, parameters).build();
	}

	/*
	 * CORS
	 */
	@OPTIONS
	@Path("/{context}/{object_type}")
	public Response optionsWithContextAndObjectType(
			@PathParam("context") String context,
			@PathParam("object_type") String object_type
			) {
		APIUtil.Parameters parameters = APIUtil.Parameters.create(ActionCategory.META, Method.OPTIONS, ContentType.HTML);
		parameters.set(APIUtil.Param.CONTEXT, context);
		return ServiceHandler.route(headers, parameters).build();
	}
	
	/*
	 * CORS
	 */
	@OPTIONS
	@Path("/{context}/{object_type}/{member_type}")
	public Response optionsWithContextAndObjectTypeAndMemberType(
			@PathParam("context") String context,
			@PathParam("object_type") String object_type,
			@PathParam("member_type") String member_type
			) {
		APIUtil.Parameters parameters = APIUtil.Parameters.create(ActionCategory.META, Method.OPTIONS, ContentType.HTML);
		parameters.set(APIUtil.Param.CONTEXT, context);
		return ServiceHandler.route(headers, parameters).build();
	}
	

}
